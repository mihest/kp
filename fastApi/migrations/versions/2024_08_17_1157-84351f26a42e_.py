"""empty message

Revision ID: 84351f26a42e
Revises: 
Create Date: 2024-08-17 11:57:26.645644

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '84351f26a42e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
                    sa.Column('name', sa.String(length=30), nullable=False),
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('role_pkey'))
                    )
    op.create_table('room_type',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id', name=op.f('room_type_pkey')),
                    sa.UniqueConstraint('name', name=op.f('room_type_name_key'))
                    )
    op.create_index(op.f('room_type_id_idx'), 'room_type', ['id'], unique=False)
    op.create_table('room',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('square', sa.Integer(), nullable=False),
                    sa.Column('sleeping_places', sa.Integer(), nullable=False),
                    sa.Column('conditioner', sa.Boolean(), nullable=False),
                    sa.Column('wi_fi', sa.Boolean(), nullable=False),
                    sa.Column('amenities', sa.JSON(), nullable=True),
                    sa.Column('room_type_id', sa.UUID(), nullable=True),
                    sa.Column('room_number', sa.Integer(), nullable=False),
                    sa.Column('floor_number', sa.Integer(), nullable=False),
                    sa.CheckConstraint('price >= 0', name=op.f('room_check_price_positive_check')),
                    sa.CheckConstraint('sleeping_places >= 0', name=op.f('room_check_sleeping_places_positive_check')),
                    sa.CheckConstraint('square >= 0', name=op.f('room_check_square_positive_check')),
                    sa.ForeignKeyConstraint(['room_type_id'], ['room_type.id'], name=op.f('room_room_type_id_fkey')),
                    sa.PrimaryKeyConstraint('id', name=op.f('room_pkey'))
                    )
    op.create_index(op.f('room_id_idx'), 'room', ['id'], unique=False)
    op.create_table('user',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('login', sa.String(length=20), nullable=False),
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
                    sa.Column('role_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('user_role_id_fkey')),
                    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey'))
                    )
    op.create_index(op.f('user_email_idx'), 'user', ['email'], unique=True)
    op.create_index(op.f('user_id_idx'), 'user', ['id'], unique=False)
    op.create_table('booking',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('room_id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('date_from', sa.Date(), nullable=False),
                    sa.Column('date_to', sa.Date(), nullable=False),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('total_cost', sa.Integer(), sa.Computed('(date_to - date_from) * price', ),
                              nullable=False),
                    sa.Column('total_days', sa.Integer(), sa.Computed('date_to - date_from', ), nullable=False),
                    sa.CheckConstraint('total_cost >= 0', name=op.f('booking_check_total_price_positive_check')),
                    sa.ForeignKeyConstraint(['room_id'], ['room.id'], name=op.f('booking_room_id_fkey')),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('booking_user_id_fkey')),
                    sa.PrimaryKeyConstraint('id', name=op.f('booking_pkey'))
                    )
    op.create_index(op.f('booking_id_idx'), 'booking', ['id'], unique=False)
    op.create_table('refresh_session',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('refresh_token', sa.UUID(), nullable=False),
                    sa.Column('expires_in', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'),
                              nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('refresh_session_user_id_fkey'),
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('refresh_session_pkey'))
                    )
    op.create_index(op.f('refresh_session_id_idx'), 'refresh_session', ['id'], unique=False)
    op.create_index(op.f('refresh_session_refresh_token_idx'), 'refresh_session', ['refresh_token'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('refresh_session_refresh_token_idx'), table_name='refresh_session')
    op.drop_index(op.f('refresh_session_id_idx'), table_name='refresh_session')
    op.drop_table('refresh_session')
    op.drop_index(op.f('booking_id_idx'), table_name='booking')
    op.drop_table('booking')
    op.drop_index(op.f('user_id_idx'), table_name='user')
    op.drop_index(op.f('user_email_idx'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('room_id_idx'), table_name='room')
    op.drop_table('room')
    op.drop_index(op.f('room_type_id_idx'), table_name='room_type')
    op.drop_table('room_type')
    op.drop_table('role')
    # ### end Alembic commands ###
